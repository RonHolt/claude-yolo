#!/bin/bash
# File: claude-yolo/claude-yolo

set -e
IMAGE_NAME="claude-yolo-env"
CREDENTIALS_VOLUME="claude-yolo-credentials"
HOST_CLAUDE_CONFIG_DIR="$HOME/.claude"

AUTH_METHOD="apikey"
NETWORK_NAME=""
while (("$#")); do
  case "$1" in
  --login)
    AUTH_METHOD="login"
    shift
    ;;
  *)
    if [ -z "$NETWORK_NAME" ]; then NETWORK_NAME="$1"; fi
    shift
    ;;
  esac
done

DOCKER_ARGS=("--rm" "-it")
DOCKER_ARGS+=("-v" "$(pwd):/project")
DOCKER_ARGS+=("-v" "/var/run/docker.sock:/var/run/docker.sock")

if [ "$AUTH_METHOD" == "login" ]; then
  echo "ðŸ”‘ Using persistent Docker volume ('$CREDENTIALS_VOLUME') for subscription login."

  # Mount the persistent named volume for the real config.
  DOCKER_ARGS+=("-v" "$CREDENTIALS_VOLUME:/home/node/.claude")

  # Also mount the host's config directory to a temporary location, READ-ONLY.
  # This is used for the one-time bootstrap of settings.
  if [ -d "$HOST_CLAUDE_CONFIG_DIR" ]; then
    DOCKER_ARGS+=("-v" "$HOST_CLAUDE_CONFIG_DIR:/tmp/host-claude-config:ro")
  fi

  DOCKER_ARGS+=("-e" "HOST_UID=$(id -u)")
  DOCKER_ARGS+=("-e" "HOST_GID=$(id -g)")
else
  echo "ðŸ”‘ Using ANTHROPIC_API_KEY."
  if [ -z "$ANTHROPIC_API_KEY" ]; then exit 1; fi
  DOCKER_ARGS+=("-e" "ANTHROPIC_API_KEY")
fi

if [ -n "$NETWORK_NAME" ]; then
  DOCKER_ARGS+=("--network" "$NETWORK_NAME")
  echo "âœ… Connecting sandbox to Docker network: $NETWORK_NAME"
else
  echo "âœ… Sandbox has internet access to reach the Claude API."
fi

echo "ðŸš€ Launching Claude YOLO sandbox..."
echo "---------------------------------------------------"
docker run "${DOCKER_ARGS[@]}" "$IMAGE_NAME"
